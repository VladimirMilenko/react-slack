{"version":3,"sources":["src/Counter/index.js","index.js"],"names":["Counter","counter","setCounter","React","useState","handleIncrease","useCallback","subClient","redis","createClient","detect_buffers","host","port","pubClient","handlerRegistry","token","web","WebClient","server","use","bodyParser","json","urlencoded","extended","statefulUpdateHandler","container","App","params","beforeMountTree","tempHandler","msg","emitter","on","SlackDOM","render","blocks","ok","ts","chat","postMessage","channel","channel_id","removeListener","Error","sendUpdate","updatedMessage","update","then","console","log","post","req","res","channel_name","user_id","command","response_url","text","body","RedisSlackContainer","status","send","hook","payload","payloadObject","JSON","parse","actions","Array","isArray","length","forEach","action","publish","action_id","stringify","err","clientsReceived","listen"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["import React from \"react\";\nimport { useInterval } from \"react-use\";\nimport { Context, Button, Actions } from \"@slack-react/host\";\n\nexport const Counter = () => {\n  const [counter, setCounter] = React.useState(0);\n  const handleIncrease = React.useCallback(() => {\n    setCounter(counter + 1);\n  }, [counter, setCounter]);\n\n\n  return (\n    <>\n      <Actions>\n        <Button onClick={handleIncrease}>Add</Button>\n      </Actions>\n      <Context>Counter: {counter}</Context>\n    </>\n  );\n};\n","import React from 'react';\nimport {RedisSlackContainer, SlackDOM} from '@slack-react/host';\nimport { WebClient } from \"@slack/web-api\";\nimport express from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport nodeFetch from \"node-fetch\";\nimport redis from 'redis';\nimport {Counter} from './src/Counter';\n\nconst subClient = redis.createClient({\n  detect_buffers: true,\n  host: \"localhost\",\n  port: 6379\n});\nconst pubClient = redis.createClient({\n  detect_buffers: true,\n  host: \"localhost\",\n  port: 6379\n});\nconst handlerRegistry = {};\nconst token = \"\";\nconst web = new WebClient(\n  token\n);\n\nconst server = express();\nserver.use(cors());\nserver.use(bodyParser.json());\nserver.use(\n  bodyParser.urlencoded({\n    extended: false\n  })\n);\n\n\nconst statefulUpdateHandler = async (container, App, params) => {\n  let beforeMountTree = null;\n  const tempHandler = (msg) => beforeMountTree = msg;\n\n  container.emitter.on('commit', tempHandler);\n\n  SlackDOM.render(App, container);\n  const blocks = container.render();\n\n  const {ok, ts} = await web.chat.postMessage({blocks, channel: params.channel_id});\n  if(!ok) {\n    container.emitter.removeListener(\"commit\", tempHandler);\n    throw new Error('Cannot handle updates');\n  }\n\n  async function sendUpdate(updatedMessage) {\n    web.chat.update({\n      channel: params.channel_id,\n      ts,\n      blocks: updatedMessage\n    }).then(({ok}) => {\n      console.log({ok});\n    })\n  }\n\n  if (beforeMountTree) {\n    sendUpdate(beforeMountTree);\n  }\n\n  container.emitter.on(\"commit\", sendUpdate);\n  container.emitter.removeListener(\"commit\", tempHandler);\n};\n\n\nserver.post('/wh/action', async (req, res) => {\n  const { channel_id, channel_name, user_id, command, response_url, text } = req.body;\n  switch(command) {\n    case '/counter':\n      const container = new RedisSlackContainer(subClient, handlerRegistry);\n      return statefulUpdateHandler(container, <Counter />, {channel_id, user_id});\n\n    default:\n      break;\n  }\n\n  res.status(200).send();\n});\n\n\nserver.post(\"/wh/handle_action\", (req, res) => {\n  const hook = req.body.payload;\n\n\n  if (typeof hook === \"string\") {\n    const payloadObject = JSON.parse(hook);\n    const { actions, response_url } = payloadObject;\n    if (Array.isArray(actions) && actions.length > 0) {\n      actions.forEach(action => {\n        pubClient.publish(\n          action.action_id,\n          JSON.stringify({ ...action, response_url }),\n          (err, clientsReceived) => {\n            if (err) {\n              console.log(\"failed to publish\");\n            }\n\n            if (clientsReceived > 0) {\n              return res.status(200).send({ ok: true });\n            } else {\n              console.log(\"message is outdated\");\n              return res.status(504).send();\n            }\n          }\n        );\n      });\n    }\n  }\n});\n\n\nserver.listen(3000);\n"]}