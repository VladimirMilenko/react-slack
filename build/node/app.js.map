{"version":3,"sources":["slack-renderer/container.js","slack-renderer/components.js","slack-components/SlackBase.js","slack-components/Actions.js","slack-components/Text.js","slack-components/Button.js","slack-components/Markdown.js","slack-components/Context.js","slack-components/DatePicker.js","slack-components/Divider.js","slack-components/Section.js","slack-components/index.js","slack-renderer/createElement.js","slack-renderer/index.js","app.js"],"names":["SlackContainer","constructor","subClient","handlerRegistry","response_url","stateful","unsubscribeFromAction","uuid","unsubscribe","subscribeToNewActionId","subscribe","appendChild","child","blocks","push","setImmediate","onCommited","removeChild","index","indexOf","splice","insertBefore","beforeChild","nextCommit","render","_","isEqual","lastCommited","emitter","emit","map","x","EventEmitter","on","channel","message","msg","JSON","parse","Button","Actions","Context","Markdown","Divider","Section","SectionText","SectionFields","SectionAccessory","DatePicker","Child","props","root","type","__root","__type","onCommit","elements","unshift","Text","text","setText","children","onClick","style","value","confirm","join","action_id","__actionId","Datepicker","onChange","undefined","placeholder","initialDate","initial_date","fields","accessory","some","length","Error","createElement","rootContainerInstance","LIB","BUTTON","ACTIONS","CONTEXT","MARKDOWN","DIVIDER","SECTION","SECTION_TEXT","SECTION_FIELDS","SECTION_ACCESSORY","DATEPICKER","SlackDOM","rootHostContext","childHostContext","hostConfig","getRootHostContext","getChildHostContext","parentHostContext","getPublicInstance","instance","prepareForCommit","containerInfo","resetAfterCommit","createInstance","hostContext","internalInstanceHandle","createTextInstance","appendInitialChild","parentInstance","finalizeInitialChildren","hostNode","prepareUpdate","domElement","oldProps","newProps","propKeys","Set","Object","keys","concat","values","payload","key","shouldSetTextContent","shouldDeprioritizeSubtree","console","log","now","Date","isPrimaryRenderer","scheduleDeferredCallback","cancelDeferredCallback","supportsMutation","commitMount","commitUpdate","updatePayload","forEach","update","resetTextContent","commitTextUpdate","textInstance","oldText","newText","appendChildToContainer","container","insertInContainerBefore","removeChildFromContainer","reconciler","component","reconcilerContainer","createContainer","updateContainer"],"mappings":"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","file":"app.js","sourceRoot":"../..","sourcesContent":["import EventEmitter from \"events\";\nimport _ from 'lodash';\n\nexport class SlackContainer {\n  constructor(subClient, handlerRegistry, response_url, stateful) {\n    this.handlerRegistry = handlerRegistry;\n    this.subClient = subClient;\n    this.stateful = stateful;\n\n    this.blocks = [];\n    if (this.stateful) {\n      this.emitter = new EventEmitter();\n      this.response_url = response_url;\n\n      this.subClient.on(\"message\", (channel, message) => {\n        if (this.handlerRegistry[channel]) {\n          const msg = JSON.parse(message);\n          this.response_url = msg.response_url;\n\n          this.handlerRegistry[channel](msg);\n        }\n      });\n\n      this.lastCommited = null;\n    }\n  }\n\n  unsubscribeFromAction = uuid => {\n    this.stateful && this.subClient.unsubscribe(uuid);\n  };\n\n  subscribeToNewActionId = uuid => {\n    this.stateful && this.subClient.subscribe(uuid);\n  };\n\n  appendChild = child => {\n    this.blocks.push(child);\n\n    setImmediate(this.onCommited, 0);\n  };\n\n  removeChild = child => {\n    const index = this.blocks.indexOf(child);\n\n    this.blocks.splice(index, 1);\n\n    setImmediate(this.onCommited, 0);\n  };\n\n  insertBefore = (child, beforeChild) => {\n    const index = this.blocks.indexOf(beforeChild);\n\n    this.blocks.splice(index, 0, child);\n    setImmediate(this.onCommited, 0);\n  };\n\n  onCommited = () => {\n    const nextCommit = this.render();\n    if (!_.isEqual(this.lastCommited, nextCommit)) {\n      this.stateful && this.emitter.emit(\"commit\", nextCommit);\n      this.lastCommited = nextCommit;\n    }\n  };\n  render = () => {\n    return this.blocks.map(x => x.render());\n  };\n}\n","export const Button = \"BUTTON\";\nexport const Actions = \"ACTIONS\";\nexport const Context = \"CONTEXT\";\nexport const Markdown = \"MARKDOWN\";\nexport const Divider = \"DIVIDER\";\nexport const Section = \"SECTION\";\nexport const SectionText = \"SECTION_TEXT\";\nexport const SectionFields = \"SECTION_FIELDS\";\nexport const SectionAccessory = \"SECTION_ACCESSORY\";\nexport const DatePicker = \"DATEPICKER\";\n","export class Child {\n  constructor(props, root, type) {\n    this.props = props;\n    this.__root = root;\n    this.__type = type;\n  }\n  onCommit() {\n    this.__root.onCommited();\n  }\n}\n","import { Child } from './SlackBase';\n\nexport class Actions extends Child {\n  constructor(props, root) {\n    super(props, root, \"ACTIONS\");\n\n    this.elements = [];\n  }\n  appendChild(child) {\n    this.elements.push(child);\n  }\n  removeChild(child) {\n    const index = this.elements.indexOf(child);\n    this.elements.splice(index, 1);\n  }\n\n  insertBefore(child, beforeChild) {\n    const index = this.elements.indexOf(beforeChild);\n    if (index === 0) {\n      this.elements.unshift(child);\n    } else {\n      this.elements.splice(index - 1, 0, child);\n    }\n  }\n  render() {\n    return {\n      type: \"actions\",\n      elements: this.elements.map(x => x.render())\n    };\n  }\n}\n","import { Child } from './SlackBase';\n\nexport class Text extends Child {\n    constructor(text, root) {\n        super(null, root, \"TEXT\");\n        this.text = text;\n    }\n    setText(text) {\n        this.text = text;\n    }\n    render() {\n        return {\n            type: \"plain_text\",\n            text: this.text\n        };\n    }\n}\n","import { Child } from './SlackBase';\nimport { Text } from './Text';\n\n\nexport class Button extends Child {\n  constructor(props, root) {\n    super(props, root, \"BUTTON\");\n\n    this.children = [];\n\n    this.onClick = props.onClick;\n  }\n  appendChild(child) {\n    if (child.__type === \"TEXT\") {\n      this.children.push(child);\n    }\n  }\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n    this.children.splice(index, 1);\n  }\n\n  insertBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n    if (index === 0) {\n      this.children.unshift(child);\n    } else {\n      this.children.splice(index - 1, 0, child);\n    }\n  }\n\n  render() {\n    const { style, value, confirm } = this;\n\n    return {\n      type: \"button\",\n      text: new Text(this.children.map(x => x.text).join(\"\")).render(),\n      action_id: this.__actionId,\n      value,\n      style,\n      confirm\n    };\n  }\n}\n","import { Child } from './SlackBase';\n\nexport class Markdown extends Child {\n    constructor(props, root) {\n        super(props, root, \"MARKDOWN\");\n\n        this.children = [];\n    }\n    appendChild(child) {\n        this.children.push(child);\n    }\n    removeChild(child) {\n        const index = this.children.indexOf(child);\n        this.children.splice(index, 1);\n    }\n    insertBefore(child, beforeChild) {\n        const index = this.children.indexOf(beforeChild);\n        if (index === 0) {\n            this.children.unshift(child);\n        } else {\n            this.children.splice(index - 1, 0, child);\n        }\n    }\n    render() {\n        return {\n            type: \"mrkdwn\",\n            text: this.children.map(x => x.text).join(\"\")\n        };\n    }\n}\n","import { Child } from './SlackBase';\nimport { Text } from './Text';\nimport { Markdown } from './Markdown';\n\nexport class Context extends Child {\n  constructor(props, root) {\n    super(props, root, \"CONTEXT\");\n\n    this.elements = [];\n  }\n  appendChild(child) {\n    this.elements.push(child);\n  }\n  removeChild(child) {\n    const index = this.elements.indexOf(child);\n    this.elements.splice(index, 1);\n  }\n  insertBefore(child, beforeChild) {\n    const index = this.elements.indexOf(beforeChild);\n    if (index === 0) {\n      this.elements.unshift(child);\n    } else {\n      this.elements.splice(index - 1, 0, child);\n    }\n  }\n  render() {\n    return {\n      type: \"context\",\n      elements: this.elements.map(x => {\n        if (x instanceof Markdown) {\n          return x.render();\n        }\n        if (x.__type === \"TEXT\") {\n          return new Text(x.text).render();\n        }\n      })\n    };\n  }\n}\n","import { Child } from './SlackBase';\nimport { Text } from './Text';\n\nexport class Datepicker extends Child {\n  constructor(props, root) {\n    super(props, root, \"DATEPICKER\");\n\n    this.onChange = null;\n    this.value = props.value || undefined;\n    this.placeholder = props.placeholder;\n    this.initialDate = props.initialDate || undefined;\n  }\n\n  render() {\n    const { value, placeholder, initialDate, __actionId } = this;\n\n    return {\n      type: \"datepicker\",\n      placeholder: placeholder ? new Text(this.placeholder).render() : undefined,\n      action_id: this.__actionId,\n      initial_date: value ? value : initialDate ? initialDate : undefined\n    };\n  }\n}\n","import { Child } from './SlackBase';\n\nexport class Divider extends Child {\n    constructor(props, root) {\n        super(props, root, \"DIVIDER\");\n\n        this.children = [];\n    }\n    appendChild(child) { }\n    removeChild(child) { }\n    render() {\n        return {\n            type: \"divider\"\n        };\n    }\n}\n","import { Child } from './SlackBase';\n\nexport class Section extends Child {\n    constructor(props, root) {\n        super(props, root, \"SECTION\");\n\n        this.fields = null;\n        this.accessory = null;\n        this.text = null;\n    }\n    appendChild(child) {\n        switch (child.__type) {\n            case \"SECTION_TEXT\":\n                this.text = child;\n                break;\n            case \"SECTION_FIELDS\":\n                this.fields = child;\n                break;\n            case \"SECTION_ACCESSORY\":\n                this.accessory = child;\n                break;\n            default:\n                this.fields.push(child);\n        }\n    }\n    removeChild(child) {\n        switch (child.__type) {\n            case \"SECTION_TEXT\":\n                this.text = null;\n                break;\n            case \"SECTION_FIELDS\":\n                this.fields = null;\n                break;\n            case \"SECTION_ACCESSORY\":\n                this.accessory = null;\n                break;\n            default:\n                const index = this.children.indexOf(child);\n                this.fields.splice(index, 1);\n                break;\n        }\n    }\n    insertBefore(child, beforeChild) {\n        this.appendChild(child);\n    }\n    render() {\n        return {\n            type: \"section\",\n            text: this.text ? this.text.render() : undefined,\n            fields: this.fields ? this.fields.render() : undefined,\n            accessory: this.accessory ? this.accessory.render() : undefined\n        };\n    }\n}\n\nexport class SectionText extends Child {\n    constructor(props, root) {\n        super(props, root, \"SECTION_TEXT\");\n        this.children = [];\n    }\n    appendChild(child) {\n        this.children.push(child);\n    }\n    removeChild(child) {\n        const index = this.children.indexOf(child);\n        this.children.splice(index, 1);\n    }\n    insertBefore(child, beforeChild) {\n        const index = this.children.indexOf(beforeChild);\n        if (index === 0) {\n            this.children.unshift(child);\n        } else {\n            this.children.splice(index - 1, 0, child);\n        }\n    }\n    render = () => {\n        return {\n            type: this.children.some(x => x.__type === \"MARKDOWN\")\n                ? \"mrkdwn\"\n                : \"plain_text\",\n            text: this.children\n                .map(x => x.render())\n                .map(x => x.text)\n                .join(\"\")\n        };\n    };\n}\n\nexport class SectionFields extends Child {\n    constructor(props, root) {\n        super(props, root, \"SECTION_FIELDS\");\n        this.children = [];\n    }\n    appendChild(child) {\n        this.children.push(child);\n    }\n    removeChild(child) {\n        const index = this.children.indexOf(child);\n        this.children.splice(index, 1);\n    }\n    insertBefore(child, beforeChild) {\n        const index = this.children.indexOf(beforeChild);\n        if (index === 0) {\n            this.children.unshift(child);\n        } else {\n            this.children.splice(index - 1, 0, child);\n        }\n    }\n    render = () => {\n        return this.children.map(x => x.render());\n    };\n}\n\nexport class SectionAccessory extends Child {\n    constructor(props, root) {\n        super(props, root, \"SECTION_ACCESSORY\");\n        this.children = [];\n    }\n    appendChild(child) {\n        this.children.push(child);\n    }\n    removeChild(child) {\n        const index = this.children.indexOf(child);\n        this.children.splice(index, 1);\n    }\n    insertBefore(child, beforeChild) {\n        const index = this.children.indexOf(beforeChild);\n        if (index === 0) {\n            this.children.unshift(child);\n        } else {\n            this.children.splice(index - 1, 0, child);\n        }\n    }\n    render = () => {\n        if (this.children.length > 1) {\n            throw new Error(\"Accessory only accepts one child\");\n        }\n        if (!this.children || this.children.length === 0) {\n            return null;\n        }\n        return this.children[0].render();\n    };\n}\n","export * from './Actions';\nexport * from './Button';\nexport * from './Context';\nexport * from './DatePicker';\nexport * from './Divider';\nexport * from './Markdown';\nexport * from './Section';\nexport * from './Text';\n","import { Button, Actions, Context, Markdown, Divider, Section, SectionText, SectionFields, SectionAccessory, Datepicker } from '../slack-components';\nexport const createElement = (type, props, rootContainerInstance) => {\n  const LIB = {\n    BUTTON: () => new Button(props, rootContainerInstance),\n    ACTIONS: () => new Actions(props, rootContainerInstance),\n    CONTEXT: () => new Context(props, rootContainerInstance),\n    MARKDOWN: () => new Markdown(props, rootContainerInstance),\n    DIVIDER: () => new Divider(props, rootContainerInstance),\n    SECTION: () => new Section(props, rootContainerInstance),\n    SECTION_TEXT: () => new SectionText(props, rootContainerInstance),\n    SECTION_FIELDS: () => new SectionFields(props, rootContainerInstance),\n    SECTION_ACCESSORY: () => new SectionAccessory(props, rootContainerInstance),\n    DATEPICKER: () => new Datepicker(props, rootContainerInstance)\n  };\n\n  return LIB[type]();\n};\n","import ReactReconciler from \"react-reconciler\";\nimport { createElement } from \"./createElement\";\nimport { Text } from '../slack-components';\nimport uuid from \"uuid/v4\";\nimport { Button, DatePicker } from \"./components\";\n\nconst rootHostContext = {};\nconst childHostContext = {};\n\nconst hostConfig = {\n  getRootHostContext(rootContainerInstance) {\n    return {\n      root: rootContainerInstance\n    };\n  },\n\n  getChildHostContext(parentHostContext, type, rootContainerInstance) {\n    return {};\n  },\n\n  getPublicInstance(instance) {\n    return {};\n  },\n\n  prepareForCommit(containerInfo) { },\n\n  resetAfterCommit(containerInfo) { },\n\n  createInstance(\n    type,\n    props,\n    rootContainerInstance,\n    hostContext,\n    internalInstanceHandle\n  ) {\n    return createElement(type, props, rootContainerInstance);\n  },\n\n  createTextInstance(\n    text,\n    rootContainerInstance,\n    hostContext,\n    internalInstanceHandle\n  ) {\n    return new Text(text, rootContainerInstance);\n  },\n\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  finalizeInitialChildren(\n    hostNode,\n    type,\n    props,\n    rootContainerInstance,\n    hostContext\n  ) {\n    switch (type) {\n      case Button:\n        if (props.onClick) {\n          if (\n            hostNode.__root &&\n            hostNode.__root.handlerRegistry &&\n            hostNode.__actionId\n          ) {\n            delete hostNode.__root.handlerRegistry[hostNode.__actionId];\n            hostNode.__root.unsubscribeFromAction(hostNode.__actionId);\n          }\n          hostNode.__actionId = uuid();\n\n          hostNode.onClick = props.onClick;\n\n          hostNode.__root.handlerRegistry[hostNode.__actionId] =\n            hostNode.onClick;\n\n          if (hostNode.__root) {\n            hostNode.__root.subscribeToNewActionId(hostNode.__actionId);\n          }\n        }\n        return;\n      case DatePicker:\n        if (props.onChange) {\n          if (\n            hostNode.__root &&\n            hostNode.__root.handlerRegistry &&\n            hostNode.__actionId\n          ) {\n            delete hostNode.__root.handlerRegistry[hostNode.__actionId];\n            hostNode.__root.unsubscribeFromAction(hostNode.__actionId);\n          }\n          hostNode.__actionId = uuid();\n\n          hostNode.onChange = props.onChange;\n\n\n          hostNode.__root.handlerRegistry[hostNode.__actionId] =\n            hostNode.onChange;\n\n          if (hostNode.__root) {\n            hostNode.__root.subscribeToNewActionId(hostNode.__actionId);\n          }\n        }\n        return;\n      default:\n        return;\n    }\n\n    return false;\n  },\n  prepareUpdate(\n    domElement,\n    type,\n    oldProps,\n    newProps,\n    rootContainerInstance,\n    hostContext\n  ) {\n    const propKeys = new Set(\n      Object.keys(newProps).concat(Object.keys(oldProps))\n    ).values();\n    const payload = [];\n    for (let key of propKeys) {\n      if (\n        key !== \"children\" && // text children are already handled\n        oldProps[key] !== newProps[key]\n      ) {\n        payload.push({ [key]: newProps[key] });\n      }\n    }\n    return payload;\n  },\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  shouldDeprioritizeSubtree(type, props) {\n    console.log(\"shouldDeprioritizeSubtree\");\n  },\n\n  now: Date.now,\n\n  isPrimaryRenderer: true,\n  scheduleDeferredCallback: \"\",\n  cancelDeferredCallback: \"\",\n\n  // -------------------\n  //     Mutation\n  // -------------------\n\n  supportsMutation: true,\n\n  commitMount(domElement, type, newProps, internalInstanceHandle) {\n  },\n\n  commitUpdate(\n    hostNode,\n    updatePayload,\n    type,\n    oldProps,\n    newProps,\n    internalInstanceHandle\n  ) {\n    switch (type) {\n      case Button:\n        updatePayload.forEach(update => {\n          Object.keys(update).forEach(key => {\n            if (key === \"onClick\") {\n              if (hostNode.__root && hostNode.__root.handlerRegistry) {\n                delete hostNode.__root.handlerRegistry[hostNode.__actionId];\n                hostNode.__root.unsubscribeFromAction(hostNode.__actionId);\n              }\n              hostNode.__actionId = uuid();\n\n              hostNode.onClick = update[key];\n\n              hostNode.__root.handlerRegistry[hostNode.__actionId] =\n                hostNode.onClick;\n              if (hostNode.__root) {\n                hostNode.__root.subscribeToNewActionId(hostNode.__actionId);\n              }\n            } else {\n              hostNode[key] = update[key];\n            }\n          });\n        });\n        break;\n      case DatePicker:\n        updatePayload.forEach(update => {\n          Object.keys(update).forEach(key => {\n            if (key === \"onChange\") {\n              if (hostNode.__root && hostNode.__root.handlerRegistry) {\n                delete hostNode.__root.handlerRegistry[hostNode.__actionId];\n                hostNode.__root.unsubscribeFromAction(hostNode.__actionId);\n              }\n              hostNode.__actionId = uuid();\n\n              hostNode.onChange = update[key];\n\n              hostNode.__root.handlerRegistry[hostNode.__actionId] =\n                hostNode.onChange;\n              if (hostNode.__root) {\n                hostNode.__root.subscribeToNewActionId(hostNode.__actionId);\n              }\n            } else {\n              hostNode[key] = update[key];\n            }\n          });\n        });\n        break;\n      default:\n        updatePayload.forEach(update => {\n          hostNode[key] = update[key];\n        });\n    }\n    setImmediate(() => {\n      hostNode.onCommit();\n    }, 0);\n  },\n\n  resetTextContent(domElement) {\n    throw new Error('Not implemented');\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.setText(newText);\n    setImmediate(() => {\n      textInstance.onCommit();\n    }, 0);\n  },\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(container, child) {\n    container.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n  },\n\n  insertInContainerBefore(container, child, beforeChild) {\n    container.insertBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(container, child) {\n    container.removeChild(child);\n  }\n};\n\nconst reconciler = ReactReconciler(hostConfig);\n\nconst SlackDOM = {\n  render(component, container) {\n    let reconcilerContainer = reconciler.createContainer(\n      container,\n      false,\n      false\n    );\n    reconciler.updateContainer(component, reconcilerContainer, null, null);\n\n    return container;\n  }\n};\n\nexport default SlackDOM;\n","import React from 'react';\nimport { SlackContainer } from \"./slack-renderer/container\";\n\n\nexport * from './slack-renderer/components';\nexport * from './slack-renderer/container';\nexport SlackDom from './slack-renderer';\n"]}